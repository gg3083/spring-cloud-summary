mybatis:
  typeAliasesPackage: com.gg.backend.domain
  configuration:
    map-underscore-to-camel-case: true
  mapper-locations: classpath:com.gg.backend.mapper/*.xml
server:
  port: 9001
  servlet:
    context-path: /backend
spring:
  profiles:
    active: dev
  application:
    name: backend
  kafka:
    producer:
      bootstrap-servers: 118.25.11.28:29092 #生产者
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
    consumer:
      bootstrap-servers: 118.25.11.28:29092
      group-id: test
      enable-auto-commit: true
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
  quartz:
    job-store-type: jdbc
    # 初始化表
    jdbc:
      initialize-schema: never
    # quartz 属性配置
#    properties:
#      org:
#        quartz:
#          scheduler:
#            # 如果使用集群，实例名需相同
#            instanceName: QuartzScheduler
#            # 如果使用集群，id需相同
#            instanceId: CLUSTERED
  thymeleaf:
    prefix: classpath:/templates/  #prefix：指定模板所在的目录
    check-template-location: true  #check-tempate-location: 检查模板路径是否存在
    cache: false  #cache: 是否缓存，开发模式下设置为false，避免改了模板还要重启服务器，线上设置为true，可以提高性能。
    suffix:  .html
    #encoding: UTF-8
    #content-type: text/html
    mode: HTML5
  jpa:
    show-sql: true
    hibernate:
      ddl-auto: update
    generate-ddl: false
    database-platform: org.hibernate.dialect.MySQL5InnoDBDialect #设置数据库方
  main:
    allow-bean-definition-overriding: true
eureka:
  client:
    service-url:
      defaultZone: http://localhost:9000/eureka/
  instance:
    prefer-ip-address: true #显示服务器IP
management:
  endpoints:
    web:
      exposure:
        include: "*"
    health:
      show-details: always

security:
  oauth2:
    client:
      client-id: user-client
      client-secret: user-secret-8888
      user-authorization-uri: http://localhost:8999/auth-user/oauth/authorize
      access-token-uri: http://localhost:8999/auth-user/oauth/token
    #    resource:
    #      id: user-client
    #      user-info-uri: user-info
    #    authorization:
    #      check-token-access: http://localhost:6001/oauth/check_token
    resource:
      jwt:
        key-uri: http://localhost:8999/auth-user/oauth/token_key
        key-value: dev